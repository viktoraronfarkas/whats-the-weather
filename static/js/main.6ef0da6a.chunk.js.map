{"version":3,"sources":["App.js","secret.js","index.js","City.module.scss"],"names":["require","config","getCities","returnArray","window","localStorage","getItem","split","addCity","currentData","city","$","val","includes","updatedData","setItem","location","reload","removeCity","e","target","getAttribute","indexOf","replace","City","props","name","data","list","temp","main","feelsLike","feels_like","clouds","all","pressure","weatherDesc","weather","description","iconCode","icon","iconSrc","style","cityStyle","className","container","title","weatherIcon","src","closeIcon","onClick","data-js-name","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","App","cities","weatherData","forEach","push","result","process","API_KEY","ajax","type","url","dataType","async","success","getWeatherData","id","placeholder","map","item","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6ef0da6a.chunk.js","sourcesContent":["import './App.css';\nimport $ from 'jquery';\nimport apiKey from './secret';\nimport cityStyle from './City.module.scss';\nrequire('dotenv').config();\n\nconst getWeatherData = (city) => {\n  let result = {};\n  let api_key = process.env.API_KEY;\n\n  $.ajax({\n    type: 'GET',\n    url: `https://api.openweathermap.org/data/2.5/find?q=${city}&units=metric&appid=${apiKey}`,\n    dataType: 'json',\n    async: false,\n    success: (data) => {\n      result = data;\n    },\n  });\n\n  return result;\n}\n\nconst getCities = (returnArray = false) => {\n  if (returnArray) {\n    return window.localStorage.getItem(\"cities\") ?  window.localStorage.getItem(\"cities\").split(',') : [];\n  } else if (!returnArray) {\n    return window.localStorage.getItem(\"cities\") ? window.localStorage.getItem(\"cities\") : '';\n  }\n}\n\nconst addCity = () => {\n  const currentData = getCities();\n  const city = $('#cityInput').val();\n\n  if (city && !currentData.includes(city)) {\n    let updatedData = '';\n    if ('' === currentData) {\n      updatedData = currentData + city;\n    } else {\n      updatedData = currentData + ',' + city;\n    }\n\n    window.localStorage.setItem('cities', updatedData);\n    window.location.reload();\n  }\n}\n\nconst removeCity = (e) => {\n  const city = e.target.getAttribute('data-js-name');\n  const currentData = getCities();\n\n  if (-1 !== currentData.indexOf(city + ',')) {\n    window.localStorage.setItem('cities', currentData.replace(city + ',', ''));\n  } else if (-1 !== currentData.indexOf(city)) {\n    window.localStorage.setItem('cities', currentData.replace(city, ''));\n  }\n\n  window.location.reload();\n}\n\nconst City = (props) => {\n  const name = props.data.list ? props?.data?.list[0]?.name : '';\n  const temp = props.data.list ? props?.data?.list[0]?.main?.temp : '';\n  const feelsLike = props.data.list ? props?.data?.list[0]?.main?.feels_like : '';\n  const clouds = props.data.list ? props?.data?.list[0]?.clouds?.all : '';\n  const pressure = props.data.list ? props?.data?.list[0]?.main?.pressure : '';\n  const weatherDesc = props.data.list ? props?.data?.list[0]?.weather[0].description : '';\n  const iconCode = props.data.list ? props?.data?.list[0]?.weather[0].icon : '';\n  const iconSrc = `http://openweathermap.org/img/wn/${iconCode}@2x.png`;\n  const style = cityStyle;\n\n  return (\n    <div className={style.container}>\n      <h3 className={style.title}>{name}</h3>\n      <img className={style.weatherIcon} src={iconSrc} />\n      <svg className={style.closeIcon} onClick={ removeCity } data-js-name={name} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"times\"\n           role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n           viewBox=\"0 0 352 512\">\n        <path fill=\"currentColor\" data-js-name={name}\n              d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\" />\n      </svg>\n      <h4>Current temperature: <span>{temp} °C</span></h4>\n      <h4>Feels like: <span>{feelsLike} °C</span></h4>\n      <h4>Cloudiness: <span>{clouds}%</span></h4>\n      <h4>Atmospheric pressure: <span>{pressure} hPa</span></h4>\n      <h4>Current weather: <span>{weatherDesc}</span></h4>\n    </div>\n  );\n}\n\nconst App = () => {\n  let cities = getCities(true);\n  let weatherData = [];\n  cities.forEach((city) => {\n    weatherData.push(getWeatherData(city));\n  });\n  //window.localStorage.clear();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>What's the weather like?</h1>\n        <h3>Add your cities and see what the weather is like at those locations.</h3>\n        <input type='text' id='cityInput' placeholder='Enter a city..' />\n        <button onClick={ addCity }>Add city</button>\n        <div className='CitiesContainer'>\n          {\n            weatherData.map((item) => (\n              <City data={item} />\n            ))\n          }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const apiKey = 'db7a5de4d8ac400c592113fcc1a3e863';\n\nexport default apiKey;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"City_container__315wi\",\"title\":\"City_title__3Jdc0\",\"weatherIcon\":\"City_weatherIcon__2Yy3v\",\"closeIcon\":\"City_closeIcon__1KZRR\"};"],"sourceRoot":""}